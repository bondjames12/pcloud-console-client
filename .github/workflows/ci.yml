# This file is part of the pCloud Console Client.
#
# (c) 2021 Serghei Iakovlev <egrep@protonmail.ch>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: CI

on:
  push:
    branches:
      - master
#      - 'feature/**'
#      - 'fix/**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

  pull_request:
    branches:
      - master

#  schedule:
#    - cron: '0 11 * * *'
      #      | | | | |
      #      | | | | |____ day of the week (0 - 6 or SUN-SAT)
      #      | | | |____ month (1 - 12 or JAN-DEC)
      #      | | |____ day of the month (1 - 31)
      #      | |____ hour (0 - 23)
      #      |____ minute (0 - 59)

jobs:
  build_and_test:

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:

        include:
          - name: linux-x64-gcc-mbedtls-debug
            os: ubuntu-18.04
            compiler: gcc
            arch: x64
            version: '5'

          - name: linux-x64-clang-mbedtls-debug
            os: ubuntu-18.04
            compiler: clang
            arch: x64
            version: '5.0'

          - name: macos-x64-apple-mbedtls-debug
            os: macos-latest
            compiler: apple-clang
            arch: x64
            version: '12.0'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 5

      - name: Setup Common Prerequisites
        run: |
          case ${{ runner.os }} in
            Linux*)
              # Add more toolchains
              echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections
              sudo add-apt-repository ppa:ubuntu-toolchain-r/test --yes
              sudo apt-get update --quiet --yes 1>/dev/null

              # Install compiler
              source .github/install-compiler-linux.sh \
                "${{ matrix.compiler }}" "${{ matrix.version }}"

              # Install build deps
              sudo apt-get install --no-install-recommends -q -y \
                 cmake \
                 doxygen \
                 fuse \
                 libfuse-dev \
                 libpthread-stubs0-dev \
                 libsqlite3-dev \
                 libmbedtls-dev \
                 ninja-build \
                 pkg-config \
                 zlib1g-dev
              ;;
            macOS*)
              sudo xcode-select -switch /Applications/Xcode.app

              echo "CC=$(xcrun -f clang)" >> $GITHUB_ENV
              echo "CXX=$(xcrun -f clang++)" >> $GITHUB_ENV
              echo "SDKROOT=$(xcodebuild -version -sdk macosx Path)" >> $GITHUB_ENV

              echo "$(xcodebuild -version -sdk macosx Path)" >> $GITHUB_PATH

              # Install common tools
              brew install \
                cmake \
                doxygen \
                macfuse \
                mbedtls@2 \
                ninja \
                sqlite \
                zlib
              ;;
          esac

      - name: Verify Toolchain Version
        run: |
          $CC --version
          $CXX --version
          cmake --version

      - name: Check Available Configure Presets
        run: cmake --list-presets

      - name: Configure client
        run: |
          case ${{ runner.os }} in
            macOS*)
              export MBEDTLS_ROOT_DIR=/usr/local/opt/mbedtls@2
            ;;
          esac

          cmake --preset=${{ matrix.name }}

      - name: Build client
        run: cmake --build --preset=${{ matrix.name }}

      - name: Run Tests
        run: ctest --preset=${{ matrix.name }}

      - name: Build Documentation
        run:  cmake --build --preset=${{ matrix.name }} --target doc

      - name: Install client
        run: cmake --build --preset=${{ matrix.name }} --target install

      - name: Minimal Install Test
        working-directory: ./out/install/${{ matrix.name }}/bin
        run: |
          ./pcloudcc --version
          ./pcloudcc --vernum
          ./pcloudcc --dumpversion
          ./pcloudcc --help

      - name: Success Reporting
        if: success()
        run: git log --format=fuller -5
